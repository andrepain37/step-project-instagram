{"version":3,"sources":["theme/Logo.js","store/posts/operations.js","store/posts/actions.js","store/modals/operations.js","store/modals/actions.js","store/user/actions.js","components/Header.js","store/user/operations.js","store/subs/actions.js","validation/reg-exp.js","validation/register/schema.js","components/Input.js","modals/RegisterForm.js","validation/login/schema.js","modals/LoginForm.js","modals/UploadPost.js","modals/UploadUserAvatar.js","validation/comments/schema.js","components/Comments.js","components/Post.js","components/Loader.js","theme/loader.jsx","modals/PostDetails.js","modals/index.js","store/subs/operations.js","components/Sub.js","components/SubsList.js","components/RecSubsList.js","theme/useBreakpoint.js","pages/HomePosts.js","components/GridListPhoto.js","components/BodyGridUser.js","components/HeaderUser.js","pages/UserPage.js","AppRoutes.js","App.js","store/posts/reducer.js","store/user/reducer.js","store/modals/reducer.js","store/subs/reducer.js","store/reducer.js","store/store.js","index.js"],"names":["Logo","className","loadPosts","dispatch","getState","posts","page","hasMore","axios","post","then","res","data","type","payload","savePosts","concat","saveHasMore","activatePostDetails","postId","loadOnePost","sendLog","user_info","Header","useDispatch","useEffect","user","isAuth","withCredentials","useState","anchorEl","setAnchorEl","handleClose","isLogin","useSelector","st","to","Avatar","aria-label","src","image","nickname","Menu","id","keepMounted","open","onClose","MenuItem","onClick","Button","aria-controls","aria-haspopup","event","currentTarget","MoreHoriz","emailRegExp","FIELD_REQUIRED","schema","yup","shape","required","min","max","email","matches","password","repeat","oneOf","Input","props","label","name","classes","rest","useField","field","meta","TextField","error","touched","helperText","connect","sendReg","values","setError","key","alertify","all_modals","modals","success","sendRegister","withFormik","mapPropsToValues","handleSubmit","sendData","setFieldError","validationSchema","Paper","noValidate","autoComplete","color","sendLogin","UploadPost","file","setFile","setImage","fileInput","useRef","current","click","variant","startIcon","CloudUpload","ref","style","display","onChange","e","img_src","window","URL","createObjectURL","target","files","Send","formData","FormData","append","headers","uploadImage","alt","UploadUserAvatar","sendSettingImage","add_comment","sendComment","comment","resetValue","newComment","commentPost","resetForm","lastComments","isAllComments","isloadAllComments","setIsLoadAllComments","comments","map","getComments","require","useStyles","makeStyles","theme","opacity","transform","card","marginBottom","media","height","paddingTop","cursor","like","transition","likeOnBg","position","top","left","pointerEvents","likeOnBgActive","animation","likeActive","content","padding","formodal","flex","Post","likes","liked","children","date","props_classes","formatDate","Moment","format","React","setLike","likeBg","setLikeBg","countLike","setCountLike","interval","setInterval","clearInterval","togglecountLike","isLike","Card","join","CardHeader","avatar","title","subheader","CardContent","CardMedia","onDoubleClick","IconButton","clsx","CardActions","disableSpacing","aria-expanded","Loader","viewBox","preserveAspectRatio","cx","cy","r","strokeWidth","stroke","strokeDasharray","fill","strokeLinecap","attributeName","dur","repeatCount","keyTimes","strokeDashoffset","wrap","PostDetails","isLoading","setIsLoading","postDetails","activePostDetails","paper","background","boxShadow","shadows","spacing","width","Modals","modalsActive","active","register","login","uploadPost","uploadUserAvatar","styles","maxWidth","maxHeight","delPost","Modal","memo","subscribeAction","userId","isSub","setSub","subAction","button","minWidth","link","alignItems","Sub","textSub","iconSub","togglePoint","_id","isSubs","setIsSub","ListItem","ListItemAvatar","ListItemText","primary","ListItemSecondaryAction","root","backgroundColor","palette","border","overflowX","SubsList","user_subs","subs","isLoadingSub","length","mySubs","value","Typography","List","dense","RecSubsList","recomends_subs","isLoadingRec","subsRecomend","useBreakpoint","queries","queryMatch","setQueryMatch","mediaQueryLists","keys","Object","isAttached","handleQueryListener","updatedMatches","reduce","acc","matchMedia","forEach","addListener","removeListener","HomePosts","allPosts","i","lastComment","matchPoints","dataLength","next","endMessage","loader","toggle","GridListPhoto","GridListTile","flexWrap","justifyContent","img","list","details","zIndex","flexDirection","fontSize","BodyGridUser","userPosts","setUserPosts","getUserPosts","GridList","cols","header","second","marginLeft","HeaderUser","userInfo","setUserInfo","getUserInfo","UserPage","match","params","AppRoutes","exact","path","component","App","Container","initialState","state","action","selectedFile","refreshCommentsPost","newPost","refreshPost","push","localStorage","getItem","setItem","removeItem","session_id","combineReducers","store","createStore","reducer","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.755e0a09.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Logo() {\r\n    return (\r\n        <div className=\"logo\">\r\n            <span className=\"logo-left logo-side\">Mono</span>\r\n            <span className=\"logo-right logo-side\">Photos</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logo;","import alertify from 'alertifyjs';\r\nimport axios from 'axios';\r\nimport { saveHasMore, saveLastComment, savePosts, saveAllComments, activatePost } from './actions';\r\n\r\nexport const loadPosts = () => (dispatch, getState) => {\r\n\r\n    const {posts, page, hasMore} = getState().posts\r\n\r\n    if (hasMore) {\r\n        axios.post(\"/posts\", {page}).then((res) => {\r\n            if (!!res.data) {\r\n                dispatch(savePosts(posts.concat(res.data)));\r\n            }else{\r\n                dispatch(saveHasMore(false))\r\n            }\r\n        });\r\n    }\r\n    \r\n}\r\n\r\nexport const loadOnePost = (postId) => (dispatch, getState) => {\r\n\r\n\r\n    axios.post(\"/posts/one\", {postId}).then((res) => {\r\n        if (!!res.data) {\r\n            dispatch(activatePost(res.data));\r\n        }\r\n    });\r\n    \r\n    \r\n}\r\n\r\nexport const uploadImage = (file) => () => {\r\n    \r\n    let formData = new FormData();\r\n    formData.append(\"image_upload\", file);\r\n\r\n    axios.post(\"/posts/create\", formData, {\r\n        headers: {\r\n            'Content-Type': 'multipart/form-data;boundary=1'\r\n        }\r\n    }).then((res) => {\r\n\r\n        if (!!res.data) {\r\n            if(!!res.data['success']){\r\n                alertify.success(res.data['success']);\r\n            }\r\n        }\r\n\r\n    });\r\n}\r\n\r\nexport const likePost = (postId, isLike) => (dispatch, getState) => {\r\n\r\n    const {isLogin} = getState().user\r\n\r\n    if (!isLogin) {\r\n        alertify.error('Вы не вошли в аккаунт!');\r\n\r\n    }else{\r\n        axios.post(\"/posts/like\", {postId, isLike}).then((res) => {\r\n\r\n            if (!!res.data) {\r\n                if(!!res.data['error']){\r\n                    alertify.error(res.data['error']);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport const commentPost = ({postId, comment, resetValue}) => (dispatch, getState) => {\r\n\r\n    const {isLogin, user_info} = getState().user\r\n\r\n    if (!isLogin) {\r\n        alertify.error('Вы не вошли в аккаунт');\r\n    }else{\r\n        axios.post(\"/posts/comment\", {postId, comment}).then((res) => {\r\n\r\n            if (!!res.data) {\r\n                if(!!res.data['success']){\r\n                    alertify.success(res.data['success']);\r\n                    dispatch(saveLastComment(\r\n                        {postId, newComment: {\r\n                            comment, name: user_info.nickname, id: res.data.id\r\n                        }}\r\n                    ));\r\n                    resetValue();\r\n                }\r\n                if(!!res.data['error']){\r\n                    alertify.error(res.data['error']);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport const getComments = (postId) => (dispatch) => {\r\n\r\n    axios.post(\"/posts/comments\", {postId}).then((res) => {\r\n\r\n        if (!!res.data) {\r\n            if(!!res.data['comments']){\r\n                dispatch(saveAllComments({\r\n                    comments: res.data['comments'], postId\r\n                }));\r\n\r\n            }\r\n        }\r\n    });\r\n    \r\n}\r\n","\r\nexport const savePosts = (posts) => ({\r\n    type: 'LOAD_POSTS',\r\n    payload: posts\r\n})\r\n\r\nexport const prepareUploadFile = (posts) => ({\r\n    type: 'PREPARE_UPLOAD_IMAGE',\r\n    payload: posts\r\n})\r\n\r\nexport const uploadFile = (posts) => ({\r\n    type: 'UPLOAD_IMAGE',\r\n    payload: posts\r\n})\r\n\r\nexport const saveLastComment = (payload) => ({\r\n    type: 'SAVE_LAST_COMMENT',\r\n    payload\r\n})\r\n\r\nexport const saveHasMore = (hasMore) => ({\r\n    type: 'SAVE_HAS_MORE',\r\n    payload: hasMore\r\n})\r\n\r\nexport const saveAllComments = (payload) => ({\r\n    type: 'SAVE_ALL_COMMENTS',\r\n    payload\r\n})\r\n\r\nexport const deletePosts = () => ({\r\n    type: 'DELETE_POSTS'\r\n})\r\n\r\nexport const activatePost = (payload) => ({\r\n    type: 'ACTIVATE_POST',\r\n    payload\r\n})\r\n\r\nexport const delActivatePost = () => ({\r\n    type: 'DEL_ACTIVATE_POST'\r\n})\r\n","import {loadOnePost} from '../posts/operations';\r\nimport { closeAll, activeRegister, activeLogin, activeUploadPost, activeUploadUserAvatar, activePostDetails } from './actions';\r\n\r\nexport const closeAllModals = () => (dispatch, getState) => {\r\n\r\n    const all_modals = getState().modals\r\n\r\n    for (const key in all_modals) {\r\n        all_modals[key] = false;\r\n    }\r\n\r\n    dispatch(closeAll(all_modals));\r\n}\r\n\r\nexport const activateRegister = () => (dispatch) => {\r\n\r\n    dispatch(activeRegister());\r\n}\r\n\r\nexport const activateUploadPost = () => (dispatch) => {\r\n\r\n    dispatch(activeUploadPost());\r\n}\r\n\r\nexport const activateLogin = () => (dispatch) => {\r\n\r\n    dispatch(activeLogin());\r\n}\r\n\r\nexport const activateUploadUserAvatar = () => (dispatch) => {\r\n    \r\n    dispatch(activeUploadUserAvatar());\r\n}\r\n\r\nexport const activatePostDetails = (postId) => (dispatch) => {\r\n    dispatch(loadOnePost(postId));\r\n    dispatch(activePostDetails());\r\n}\r\n\r\n","\r\nexport const closeAll = (payload) => ({\r\n    type: 'CLOSE_ALL',\r\n    payload\r\n})\r\n\r\nexport const activeRegister = () => ({\r\n    type: 'ACTIVE_REGISTER'\r\n})\r\n\r\nexport const activeLogin = () => ({\r\n    type: 'ACTIVE_LOGIN'\r\n})\r\n\r\nexport const activeUploadPost = () => ({\r\n    type: 'ACTIVE_UPLOAD_POST'\r\n})\r\n\r\nexport const activeUploadUserAvatar = () => ({\r\n    type: 'ACTIVE_UPLOAD_USER_AVATAR'\r\n})\r\n\r\nexport const activePostDetails = () => ({\r\n    type: 'ACTIVE_POST_DETAILS'\r\n})\r\n\r\n\r\n","\r\nexport const sendLog = (user_info) => ({\r\n    type: 'SEND_LOGIN',\r\n    payload: user_info\r\n})\r\n\r\nexport const logOut = () => ({\r\n    type: 'SEND_LOGOUT'\r\n})\r\n\r\nexport const setAvatar = (image) => ({\r\n    type: 'SET_AVATAR',\r\n    payload: image\r\n})\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { MoreHoriz } from '@material-ui/icons';\r\nimport Logo from '../theme/Logo';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { activateLogin, activateRegister, activateUploadPost, activateUploadUserAvatar } from '../store/modals/operations';\r\nimport { checkUser, sendLogOut } from '../store/user/operations';\r\nimport { Avatar } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header() {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(checkUser())\r\n      }, [dispatch]);\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    \r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const goLog = () => {\r\n        setAnchorEl(null);\r\n        dispatch(activateLogin())\r\n    }\r\n\r\n    const goReg = () => {\r\n        setAnchorEl(null);\r\n        dispatch(activateRegister())\r\n    }\r\n\r\n    const goUploadPost = () => {\r\n        setAnchorEl(null);\r\n        dispatch(activateUploadPost())\r\n    }\r\n\r\n    const goLogOut = () => {\r\n        setAnchorEl(null);\r\n        dispatch(sendLogOut())\r\n    }\r\n\r\n    const goUploadUserAvatar = () => {\r\n        setAnchorEl(null);\r\n        dispatch(activateUploadUserAvatar())\r\n    }\r\n\r\n    \r\n\r\n    const isLogin = useSelector(st => st.user.isLogin)\r\n    const user_info = useSelector(st => st.user.user_info)\r\n    \r\n\r\n    return (\r\n        <header>\r\n            <Link to=\"/\" ><Logo></Logo></Link>\r\n            \r\n            <div className=\"header-nav-info\">\r\n                {isLogin &&\r\n                <>\r\n                    <Avatar\r\n                        aria-label=\"recipe\" \r\n                        src={user_info.image}\r\n                        className=\"avatar\"\r\n                    >\r\n                        {user_info.nickname[0]}\r\n                    </Avatar>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={anchorEl}\r\n                        keepMounted\r\n                        open={!!anchorEl}\r\n                        onClose={handleClose}\r\n                    >\r\n                        <MenuItem onClick={goUploadUserAvatar}>Поменять аватар</MenuItem>\r\n                        <MenuItem onClick={goUploadPost}>Загрузить пост</MenuItem>\r\n                        <MenuItem onClick={goLogOut}>Выйти</MenuItem>\r\n                    </Menu>  \r\n                </>\r\n                }\r\n                {!isLogin &&\r\n                <Menu\r\n                    id=\"simple-menu\"\r\n                    anchorEl={anchorEl}\r\n                    keepMounted\r\n                    open={!!anchorEl}\r\n                    onClose={handleClose}\r\n                >\r\n                    <MenuItem onClick={goLog}>Войти</MenuItem>\r\n                    <MenuItem onClick={goReg}>Зарегистрироваться</MenuItem>\r\n                </Menu>   \r\n                }\r\n                <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n                    <MoreHoriz></MoreHoriz>\r\n                </Button>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n\r\n\r\n\r\n","import axios from 'axios';\r\nimport alertify from 'alertifyjs';\r\nimport { sendLog, logOut, setAvatar } from './actions';\r\nimport { closeAllModals } from '../modals/operations';\r\nimport { deletePosts } from '../posts/actions';\r\nimport { clearSubs } from '../subs/actions';\r\n\r\n\r\nexport const checkUser = () => (dispatch, getState) => {\r\n\r\n    const {isAuth} = getState().user\r\n\r\n    if (isAuth) {\r\n        axios.post(\"/auth/check\", {withCredentials: true}).then((res) => {\r\n\r\n\r\n            if (!!res.data) {\r\n                dispatch(sendLog(res.data['user']));\r\n            }else{\r\n                dispatch(logOut())\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport const sendSettingImage = (file) => (dispatch, getState) => {\r\n\r\n    const {isLogin} = getState().user\r\n\r\n    if (!isLogin) {\r\n        alertify.error('Вы не вошли в аккаунт!');\r\n\r\n    }else{\r\n\r\n        let formData = new FormData();\r\n        formData.append(\"image_upload\", file);\r\n\r\n        axios.post(\"/users/image/set\", formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data;boundary=1'\r\n            }\r\n        }).then((res) => {\r\n\r\n            if (!!res.data && !!res.data['success'] && !!res.data['image']) {\r\n                alertify.success(res.data['success'])\r\n                dispatch(setAvatar(res.data['image']))\r\n                dispatch(closeAllModals())  \r\n            }\r\n\r\n        });\r\n    }\r\n}\r\n\r\nexport const sendLogOut = () => (dispatch) => {\r\n\r\n    axios.post(\"/auth/logout\").then(() => {\r\n\r\n        dispatch(logOut())\r\n        dispatch(deletePosts())\r\n        dispatch(clearSubs())\r\n    });\r\n}\r\n\r\nexport const sendRegister = ({values, setError}) => (dispatch) => {\r\n\r\n    axios.post(\"/auth/register\", {...values}).then((res) => {\r\n        \r\n        if (!!res.data['error']) {\r\n\r\n            for (const key in res.data['error']) {\r\n                setError(key, res.data['error'][key])\r\n                alertify.error(res.data['error'][key]);\r\n            }\r\n            \r\n        }\r\n\r\n        if (!!res.data['success']) {\r\n            dispatch(closeAllModals())\r\n            alertify.success(res.data['success']);\r\n            \r\n        }\r\n    });\r\n}\r\n\r\nexport const sendLogin = ({values, setError}) => (dispatch) => {\r\n\r\n    axios.post(\"/auth/login\", {...values}).then((res) => {\r\n        \r\n        \r\n        if (!!res.data['error']) {\r\n\r\n            for (const key in res.data['error']) {\r\n                setError(key, res.data['error'][key])\r\n                alertify.error(res.data['error'][key]);\r\n            }\r\n            \r\n        }\r\n\r\n        if (!!res.data['success']) {\r\n            dispatch(closeAllModals())    \r\n            dispatch(sendLog(res.data['user']));\r\n            alertify.success(res.data['success']);\r\n            dispatch(deletePosts())\r\n        }\r\n    });\r\n}\r\n\r\n\r\n\r\n","\r\nexport const getRecomendSubs = (payload) => ({\r\n    type: 'GET_RECOMEND_SUBS',\r\n    payload\r\n})\r\n\r\nexport const saveSubs = (payload) => ({\r\n    type: 'SAVE_SUBS',\r\n    payload\r\n})\r\n\r\nexport const clearSubs = () => ({\r\n    type: 'CLEAR_SUBS'\r\n})\r\n\r\n\r\n\r\n\r\n","\r\nexport const phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\nexport const emailRegExp = /\\S+@\\S+\\.\\S+/;","import * as yup from 'yup';\r\nimport { emailRegExp } from '../reg-exp';\r\n\r\nconst FIELD_REQUIRED = 'Поле не должно быть пустым';\r\n\r\nconst schema = yup.object().shape({\r\n    nickname: yup\r\n      .string()\r\n      .required(FIELD_REQUIRED)\r\n      .min(3, 'У никнейма должно быть минимум 3 символа')\r\n      .max(20, 'У никнейма должно быть максимум 20 символов'),\r\n    email: yup\r\n      .string()\r\n      .required(FIELD_REQUIRED)\r\n      .matches(emailRegExp, 'Введенный Email не корректный!'),\r\n    password: yup\r\n      .string()\r\n      .required(FIELD_REQUIRED),\r\n    repeat: yup\r\n      .string()\r\n      .required(FIELD_REQUIRED)\r\n      .oneOf([yup.ref(\"password\"), null], \"Пароли не совпадают!\")\r\n});\r\n  \r\nexport default schema;","import React from 'react'\r\nimport { useField } from 'formik';\r\nimport { TextField } from '@material-ui/core';\r\n\r\nfunction Input(props) {\r\n  const { label, name, classes, ...rest } = props;\r\n\r\n  const [field, meta] = useField(name);\r\n\r\n  return (\r\n    <>\r\n      <TextField\r\n          id=\"outlined-password-input\"\r\n          error={meta.touched && !!meta.error}\r\n          label={label}\r\n          name={name}\r\n          helperText={meta.touched && meta.error}\r\n          className={classes}\r\n          {...field} \r\n          {...rest}\r\n        />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Input\r\n","\r\n\r\nimport React from 'react';\r\nimport {Form, withFormik} from \"formik\";\r\nimport schema from \"../validation/register/schema\";\r\nimport { Button, Paper } from '@material-ui/core';\r\nimport Input from '../components/Input';\r\nimport { connect } from 'react-redux';\r\nimport { sendRegister } from '../store/user/operations';\r\n\r\nfunction RegisterForm() {\r\n\r\n\r\n    return (\r\n        \r\n        <Paper>\r\n            <Form noValidate autoComplete=\"off\" className=\"modal-form\">\r\n                <h3 className=\"modal-form-title\">Регистрация</h3>   \r\n                <Input label=\"Ваш никнейм\" name=\"nickname\" type=\"text\" />\r\n                <Input label=\"Ваш email\" name=\"email\" type=\"text\" />\r\n                <Input label=\"Ваш пароль\" name=\"password\" type=\"password\" />\r\n                <Input label=\"Повторите пароль\" name=\"repeat\" type=\"password\" />\r\n                <Button color=\"primary\" type=\"submit\">\r\n                    Отправить\r\n                </Button>\r\n            </Form>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        sendReg: values => dispatch(sendRegister(values))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withFormik({\r\n    mapPropsToValues: () => ({\r\n        nickname: '',\r\n        email: '',\r\n        password: '',\r\n        repeat: ''\r\n    }),\r\n    handleSubmit: (values, {props, setFieldError}) => {\r\n        const sendData = {\r\n            values,\r\n            setError: setFieldError\r\n        }\r\n        \r\n        props.sendReg(sendData);\r\n        \r\n   \r\n    },\r\n    validationSchema: schema\r\n  })(RegisterForm));","import * as yup from 'yup';\r\nimport { emailRegExp } from '../reg-exp';\r\n\r\nconst FIELD_REQUIRED = 'Поле не должно быть пустым';\r\n\r\nconst schema = yup.object().shape({\r\n    email: yup\r\n      .string()\r\n      .required(FIELD_REQUIRED)\r\n      .matches(emailRegExp, 'Введенный Email не корректный!'),\r\n    password: yup\r\n      .string()\r\n      .required(FIELD_REQUIRED),\r\n});\r\n  \r\nexport default schema;","\r\n\r\nimport React from 'react';\r\nimport {Form, withFormik} from \"formik\";\r\nimport schema from \"../validation/login/schema\";\r\nimport { Button, Paper } from '@material-ui/core';\r\nimport Input from '../components/Input';\r\nimport { connect } from 'react-redux';\r\nimport { sendLogin } from '../store/user/operations';\r\n\r\nfunction LoginForm() {\r\n\r\n\r\n    return (\r\n        \r\n    <Paper>          \r\n        <Form noValidate autoComplete=\"off\" className=\"modal-form\">\r\n            <h3 className=\"modal-form-title\">Авторизация</h3>   \r\n            <Input label=\"Ваш email\" name=\"email\" type=\"text\" />\r\n            <Input label=\"Ваш пароль\" name=\"password\" type=\"password\" />\r\n            <Button color=\"primary\" type=\"submit\">\r\n                Отправить\r\n            </Button>\r\n        </Form>\r\n    </Paper>\r\n        \r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        sendLog: values => dispatch(sendLogin(values))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withFormik({\r\n    mapPropsToValues: () => ({\r\n        email: '',\r\n        password: '',\r\n    }),\r\n    handleSubmit: (values, {props, setFieldError}) => {\r\n    \r\n        const sendData = {\r\n            values,\r\n            setError: setFieldError\r\n        }\r\n        props.sendLog(sendData);\r\n        \r\n    },\r\n    validationSchema: schema\r\n  })(LoginForm));","\r\n\r\nimport React, { useRef, useState } from 'react';\r\nimport { Button, Paper } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Send, CloudUpload } from '@material-ui/icons';\r\nimport { uploadImage } from '../store/posts/operations';\r\n\r\nfunction UploadPost() {\r\n\r\n    const isLogin = useSelector(st => st.user.isLogin)\r\n\r\n    const [file, setFile] = useState(null);\r\n    const [image, setImage] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const fileInput = useRef(null);\r\n\r\n\r\n    const onFileChange = (e) => { \r\n     \r\n      const img_src = window.URL.createObjectURL(e.target.files[0]);\r\n      setFile(e.target.files[0]); \r\n      setImage(img_src)\r\n\r\n    }; \r\n\r\n    const handleOpenFileInput = () => {\r\n      fileInput.current.click();\r\n    };\r\n\r\n    \r\n\r\n    const handleUploadImage = () => {\r\n      dispatch(uploadImage(file));\r\n      setFile(null); \r\n      setImage(null)\r\n    };\r\n\r\n    if (!isLogin) {\r\n      return 'Error';\r\n    }\r\n\r\n\r\n    return (\r\n        <Paper>\r\n            <h3 className=\"modal-form-title\">Загрузить пост!</h3>\r\n            <div className=\"modal-form-post\"> \r\n\r\n                <Button\r\n                    onClick={handleOpenFileInput}\r\n                    variant=\"contained\"\r\n                    color=\"default\"\r\n                    startIcon={<CloudUpload />}\r\n                  >\r\n                    Загрузить\r\n                </Button>\r\n                <input ref={fileInput} style={{display: 'none'}} name=\"upload_post\" id=\"upload_post\" type=\"file\" onChange={onFileChange} /> \r\n\r\n                \r\n                \r\n                {image && \r\n                file && \r\n                <div className=\"modal-form-post__preview\">  \r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<Send />}\r\n                    onClick={handleUploadImage}\r\n                  >\r\n                    Выставить пост!\r\n                  </Button>\r\n                  <hr />\r\n                  <h4>Предварительный просмотр!</h4>\r\n                  <img src={image} alt={file.name} />\r\n                </div>}\r\n            </div> \r\n        </Paper>\r\n    );\r\n}\r\n\r\n\r\nexport default UploadPost;","\r\n\r\nimport React, { useRef, useState } from 'react';\r\nimport { Button, Paper } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Send, CloudUpload } from '@material-ui/icons';\r\nimport { sendSettingImage } from '../store/user/operations';\r\n\r\nfunction UploadUserAvatar() {\r\n\r\n    const isLogin = useSelector(st => st.user.isLogin)\r\n\r\n    const [file, setFile] = useState(null);\r\n    const [image, setImage] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const fileInput = useRef(null);\r\n\r\n\r\n    const onFileChange = (e) => { \r\n     \r\n      const img_src = window.URL.createObjectURL(e.target.files[0]);\r\n      setFile(e.target.files[0]); \r\n      setImage(img_src)\r\n\r\n    }; \r\n\r\n    const handleOpenFileInput = () => {\r\n      fileInput.current.click();\r\n    };\r\n\r\n    \r\n\r\n    const handleUploadImage = () => {\r\n\r\n      dispatch(sendSettingImage(file));\r\n      setFile(null); \r\n      setImage(null)\r\n    };\r\n\r\n    if (!isLogin) {\r\n      return 'Error';\r\n    }\r\n\r\n\r\n    return (\r\n        <Paper>\r\n            <h3 className=\"modal-form-title\">Загрузить аватар!</h3>\r\n            <div className=\"modal-form-post\"> \r\n\r\n                <Button\r\n                    onClick={handleOpenFileInput}\r\n                    variant=\"contained\"\r\n                    color=\"default\"\r\n                    startIcon={<CloudUpload />}\r\n                  >\r\n                    Загрузить\r\n                </Button>\r\n                <input ref={fileInput} style={{display: 'none'}} name=\"upload_post\" id=\"upload_post\" type=\"file\" onChange={onFileChange} /> \r\n\r\n                \r\n                \r\n                {image && \r\n                file && \r\n                <div className=\"modal-form-post__preview\">  \r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<Send />}\r\n                    onClick={handleUploadImage}\r\n                  >\r\n                    Поменять аватар!\r\n                  </Button>\r\n                  <hr />\r\n                  <h4>Предварительный просмотр!</h4>\r\n                  <img src={image} alt={file.name} />\r\n                </div>}\r\n            </div> \r\n        </Paper>\r\n    );\r\n}\r\n\r\n\r\nexport default UploadUserAvatar;","import * as yup from 'yup';\r\n\r\nconst FIELD_REQUIRED = 'Комментарий не должен быть пустым';\r\n\r\nconst schema = yup.object().shape({\r\n    add_comment: yup\r\n      .string()\r\n      .required(FIELD_REQUIRED)\r\n      .min(1, 'Комментарий не должен быть пустым'),\r\n});\r\n  \r\nexport default schema;","import React, { useState } from 'react';\r\nimport {Form, withFormik} from \"formik\";\r\nimport schema from \"../validation/comments/schema\";\r\nimport { Button } from '@material-ui/core';\r\nimport Input from '../components/Input';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { commentPost, getComments } from '../store/posts/operations';\r\n\r\n\r\nfunction Comments({lastComments, postId = false, isAllComments = false}) {\r\n\r\n    const [isloadAllComments, setIsLoadAllComments] = useState(isAllComments);\r\n    const dispatch = useDispatch();\r\n\r\n    const loadAllComments = () => {\r\n        setIsLoadAllComments(true);\r\n        dispatch(getComments(postId))\r\n    }\r\n\r\n    let comments = false;\r\n\r\n    if (!!lastComments) {\r\n        comments = lastComments.map(e => {\r\n            return (\r\n                <div className=\"comments-comment\" key={e.id}>\r\n                    <span className=\"comments-comment--name\">{e.name}</span>\r\n                    <span className=\"comments-comment--comment\">{e.comment}</span>\r\n                </div>\r\n            )\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <section className=\"comments\">\r\n            {!isloadAllComments && lastComments && <span onClick={loadAllComments} className=\"comments-loader\" >Загрузить все комментарии</span>}\r\n            <div className=\"comments_users\">\r\n                {comments}\r\n            </div>\r\n            <Form noValidate autoComplete=\"off\" className=\"comments-form\">\r\n                <Input label=\"Добавить комментарий\" name=\"add_comment\" type=\"text\" classes=\"comments-form__comment\" />\r\n                <Button color=\"primary\" type=\"submit\">\r\n                    Отправить\r\n                </Button>\r\n            </Form>\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        sendComment: (postId, comment) => dispatch(commentPost(postId, comment))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(withFormik({\r\n    mapPropsToValues: () => ({\r\n        add_comment: ''\r\n    }),\r\n    handleSubmit: (values, {props, resetForm}) => {\r\n\r\n\r\n        const sendData = {\r\n            postId: props.postId,\r\n            comment: values.add_comment,\r\n            resetValue: resetForm\r\n        }\r\n\r\n        props.sendComment(sendData);\r\n    },\r\n    validationSchema: schema\r\n})(Comments));","import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport Moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { likePost } from '../store/posts/operations';\r\nrequire('moment/locale/ru');\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  '@keyframes likeOnBg-anim': {  \r\n    '0%': {\r\n      opacity: 0,\r\n      transform: 'translate(-50%, -50%) scale(1)'\r\n    },\r\n    '100%': {\r\n      opacity: 1,\r\n      transform: 'translate(-50%, -50%) scale(3)'\r\n    },\r\n  },\r\n  card: {\r\n    marginBottom: '20px'\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '100%',\r\n    cursor: 'pointer'\r\n  },\r\n  like: {\r\n    transition: '.3s'\r\n  },\r\n  likeOnBg: {\r\n    transition: '.2s',\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%) scale(1)',\r\n    pointerEvents: 'none',\r\n    color: '#ff3b3bc2',\r\n    opacity: 0,\r\n  },\r\n  likeOnBgActive: {\r\n    animation: '$likeOnBg-anim 200ms linear',\r\n    transform: 'translate(-50%, -50%) scale(3)',\r\n    opacity: 1\r\n  },\r\n  likeActive: {\r\n    color: '#ff3b3b'\r\n  },\r\n  content: {\r\n    padding: 0,\r\n    position: 'relative'\r\n  },\r\n  formodal: {\r\n    flex: 1\r\n  }\r\n}));\r\n\r\nexport default function Post(props) {\r\n\r\n  const {id, likes, image, user, liked, children, date, props_classes} = props\r\n\r\n  \r\n  const formatDate = Moment(date).format('DD MMMM YYYY HH:mm');\r\n\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const isLogin = useSelector(st => st.user.isLogin)\r\n\r\n  const [like, setLike] = React.useState(liked);\r\n  const [likeBg, setLikeBg] = React.useState(false);\r\n  const [countLike, setCountLike] = React.useState(likes);\r\n\r\n\r\n  useEffect(() => {\r\n    if (likeBg) {\r\n      const interval = setInterval(() => {\r\n        setLikeBg(false);\r\n      }, 1500);\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [likeBg]);\r\n\r\n  \r\n\r\n\r\n  const addToLike = () => {\r\n    if (isLogin) {\r\n      if (like !== true) {\r\n        togglecountLike(like, true);\r\n      }\r\n      setLike(true);\r\n      setLikeBg(true);\r\n    }\r\n    \r\n  };\r\n\r\n  const togglecountLike = (like) => {\r\n    if (isLogin) {\r\n      if (!like) {\r\n        setCountLike(countLike + 1);\r\n      }else{\r\n        setCountLike(countLike - 1);\r\n      }\r\n    }\r\n    \r\n    dispatch(likePost(id, !like));\r\n    \r\n\r\n  }\r\n\r\n  const addToLikeToggle = () => {\r\n    if (isLogin) {\r\n      setLike(!like);\r\n    }\r\n    togglecountLike(like);\r\n  };\r\n\r\n\r\n  return (\r\n    <Card className={[classes.card, props_classes].join(' ')}>\r\n      <div className={classes.formodal}>\r\n        <CardHeader\r\n          avatar={        \r\n            <Avatar\r\n                aria-label=\"recipe\" \r\n                src={user.image}\r\n                className=\"avatar\"\r\n            >\r\n              {user.nickname[0]}\r\n            </Avatar>\r\n          }\r\n          title={user.nickname}\r\n          subheader={formatDate}\r\n        />\r\n        <CardContent className={classes.content}>\r\n          <CardMedia\r\n            className={classes.media}\r\n            onDoubleClick={addToLike}\r\n            image={image}\r\n          />\r\n          <IconButton\r\n            className={clsx(classes.likeOnBg, {\r\n              [classes.likeOnBgActive]: likeBg,\r\n            })}\r\n          >\r\n            <FavoriteIcon />\r\n          </IconButton>\r\n        </CardContent>\r\n        <CardActions disableSpacing>\r\n        <IconButton \r\n          aria-label=\"add to favorites\"\r\n          className={clsx(classes.like, {\r\n            [classes.likeActive]: like,\r\n          })}\r\n          onClick={addToLikeToggle}\r\n          aria-expanded={like}\r\n        >\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <span>{countLike} отметок \"Нравится\"</span>\r\n      </CardActions>\r\n      </div>\r\n      <CardActions className={classes.formodal} disableSpacing>\r\n          {children}\r\n      </CardActions>\r\n\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { loaderSvg } from '../theme/loader.jsx';\r\n\r\nfunction Loader() {\r\n    return (\r\n        <div className=\"loader\">\r\n            {loaderSvg()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader;","export const loaderSvg = () => {\n  return(\n    <svg viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n      <circle cx=\"50\" cy=\"50\" r=\"32\" strokeWidth=\"8\" stroke=\"#000000\" strokeDasharray=\"50.26548245743669 50.26548245743669\" fill=\"none\" strokeLinecap=\"round\">\n        <animateTransform attributeName=\"transform\" type=\"rotate\" dur=\"1s\" repeatCount=\"indefinite\" keyTimes=\"0;1\" values=\"0 50 50;360 50 50\"></animateTransform>\n      </circle>\n      <circle cx=\"50\" cy=\"50\" r=\"23\" strokeWidth=\"8\" stroke=\"#d0d0d0\" strokeDasharray=\"36.12831551628262 36.12831551628262\" strokeDashoffset=\"36.12831551628262\" fill=\"none\" strokeLinecap=\"round\">\n        <animateTransform attributeName=\"transform\" type=\"rotate\" dur=\"1s\" repeatCount=\"indefinite\" keyTimes=\"0;1\" values=\"0 50 50;-360 50 50\"></animateTransform>\n      </circle>\n    </svg>\n  )\n\n}\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Comments from '../components/Comments';\r\nimport Post from '../components/Post';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Loader from '../components/Loader';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    wrap: {\r\n      display: 'flex'\r\n    },\r\n}));\r\n\r\nfunction PostDetails() {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const postDetails = useSelector(st => st.posts.activePostDetails);\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        if (postDetails) {\r\n            setIsLoading(false);\r\n        }\r\n    }, [postDetails]);\r\n\r\n    if (isLoading) {\r\n        return <Loader />\r\n    }\r\n\r\n    return (\r\n        <Post {...postDetails} props_classes={classes.wrap}> \r\n            <Comments postId={postDetails.id} lastComments={postDetails.lastComments} isAllComments={true} />\r\n        </Post>\r\n    );\r\n}\r\n\r\nexport default PostDetails;","import React, { memo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport RegisterForm from './RegisterForm';\r\nimport LoginForm from './LoginForm';\r\nimport UploadPost from './UploadPost';\r\nimport UploadUserAvatar from './UploadUserAvatar';\r\nimport { Modal, Paper } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { closeAllModals } from '../store/modals/operations';\r\nimport PostDetails from './PostDetails';\r\nimport { delActivatePost } from '../store/posts/actions';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        background: 'linear-gradient(135deg, #000 50%, #fff 50%)',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n        width: '100%',\r\n        top: `50%`,\r\n        left: `50%`,\r\n        transform: `translate(-50%, -50%)`,\r\n    },\r\n}));\r\n\r\nfunction Modals() {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const modalsActive = useSelector(st => st.modals.active)\r\n    const register = useSelector(st => st.modals.register)\r\n    const login = useSelector(st => st.modals.login)\r\n    const uploadPost = useSelector(st => st.modals.uploadPost)\r\n    const uploadUserAvatar = useSelector(st => st.modals.uploadUserAvatar)\r\n    const postDetails = useSelector(st => st.modals.postDetails)\r\n    const classes = useStyles();\r\n    const styles = {}\r\n    styles.maxWidth = 400\r\n\r\n    if (postDetails) {\r\n        styles.maxWidth = 1000;\r\n        styles.maxHeight = 660;\r\n    }\r\n\r\n    const handleClose = (delPost) => {\r\n        \r\n        dispatch(closeAllModals())\r\n        if (delPost) {\r\n            dispatch(delActivatePost())\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <Modal\r\n            open={modalsActive}\r\n            onClose={() => handleClose(postDetails)}\r\n        >\r\n            <Paper className={classes.paper} style={{...styles}}>\r\n                <section className=\"modal\">\r\n                    <span className=\"modal__close\" onClick={handleClose}></span>\r\n                    {register && <RegisterForm />}\r\n                    {login && <LoginForm />}\r\n                    {uploadPost && <UploadPost />}\r\n                    {uploadUserAvatar && <UploadUserAvatar />}\r\n                    {postDetails && <PostDetails />}\r\n                </section>\r\n            </Paper>\r\n        </Modal>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default memo(Modals);","import alertify from 'alertifyjs';\r\nimport axios from 'axios';\r\nimport { getRecomendSubs, saveSubs } from './actions';\r\n\r\nexport const getRecomends = () => (dispatch, getState) => {\r\n\r\n    const {isLogin} = getState().user\r\n\r\n\r\n    if (isLogin) {\r\n        axios.post(\"/subs/recomends\").then((res) => {\r\n\r\n            if (!!res.data && !!res.data['subs']) {\r\n                dispatch(getRecomendSubs(res.data['subs']))\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport const getSubs = () => (dispatch, getState) => {\r\n\r\n    const {isLogin} = getState().user\r\n\r\n\r\n    if (isLogin) {\r\n        axios.post(\"/subs/get\").then((res) => {\r\n\r\n            if (!!res.data && !!res.data['subs']) {\r\n                dispatch(saveSubs(res.data['subs']))\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport const subscribeAction = (userId, isSub, setSub) => (dispatch, getState) => {\r\n\r\n    const {isLogin} = getState().user\r\n\r\n    const subAction = isSub ? 'unsub' : 'sub'\r\n\r\n\r\n    if (isLogin && userId) {\r\n        axios.post(`/subs/action/${subAction}`, {userId}).then((res) => {\r\n            if (!!res.data) {\r\n                if (!!res.data['error']) {\r\n                    alertify.error(res.data['error'])\r\n                }\r\n                if (!!res.data['sub']) {\r\n                    setSub(!isSub)\r\n                }\r\n            }\r\n            \r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Button, makeStyles } from '@material-ui/core';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport RemoveCircleOutlineOutlinedIcon from '@material-ui/icons/RemoveCircleOutlineOutlined';\r\nimport { useDispatch } from 'react-redux';\r\nimport { subscribeAction } from '../store/subs/operations';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    button: {\r\n        minWidth: 'inherit'\r\n    },\r\n    link: {\r\n      width: '100%',\r\n      display: 'flex',\r\n      alignItems: 'center'\r\n    }\r\n}));\r\n\r\nconst Sub = ({image, nickname, togglePoint, _id, isSubs}) => {\r\n\r\n    const [isSub, setIsSub] = useState(isSubs || false);\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    \r\n    let textSub,\r\n    iconSub\r\n\r\n    if (!isSub) {\r\n      textSub = 'Подписаться'\r\n      iconSub = <AddCircleOutlineIcon />\r\n    }else{\r\n      textSub = 'Отписаться'\r\n      iconSub = <RemoveCircleOutlineOutlinedIcon />\r\n    }\r\n\r\n    const subAction = () => {\r\n      dispatch(subscribeAction(_id, isSub, setIsSub))\r\n    }\r\n\r\n    return ( \r\n      \r\n        <ListItem button>\r\n          <Link className={classes.link} to={`/user/${_id}`}>\r\n            <ListItemAvatar>\r\n            <Avatar\r\n                aria-label=\"recipe\" \r\n                src={image}\r\n                className=\"avatar\"\r\n            >\r\n              {nickname[0]}\r\n            </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText primary={nickname} />\r\n          </Link>\r\n            <ListItemSecondaryAction>\r\n            <Button \r\n                onClick={subAction}\r\n                variant=\"contained\" \r\n                className={classes.button} \r\n                color=\"secondary\">\r\n              {!togglePoint && textSub}\r\n              {togglePoint && iconSub}\r\n            </Button>\r\n            </ListItemSecondaryAction>\r\n        </ListItem>\r\n     );\r\n}\r\n \r\nexport default Sub;","import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport { Typography } from '@material-ui/core';\r\nimport { getSubs } from '../store/subs/operations';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from './Loader';\r\nimport Sub from './Sub';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '1px solid #000',\r\n    marginBottom: '5px',\r\n    maxHeight: '140px',\r\n    overflowX: 'auto'\r\n  },\r\n}));\r\n\r\nfunction SubsList({togglePoint}) {\r\n\r\n  \r\n\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const user_subs = useSelector(st => st.subs.user_subs)\r\n  const isLoading = useSelector(st => st.subs.isLoadingSub)\r\n  const isLogin = useSelector(st => st.user.isLogin)\r\n\r\n\r\n  useEffect(() => {\r\n    if (!user_subs.length && isLoading) {\r\n      dispatch(getSubs())\r\n    }\r\n  }, [dispatch, user_subs, isLoading, isLogin]);\r\n\r\n  \r\n\r\n  const mySubs = user_subs.map((value) => (\r\n    <Sub key={value._id} isSubs={true} togglePoint={togglePoint} {...value} />\r\n  ))\r\n  \r\n\r\n  if (!user_subs.length && isLoading) {\r\n    return <Loader />\r\n  }\r\n\r\n\r\n\r\nreturn (\r\n  <>\r\n      <Typography variant=\"h6\">\r\n          Ваши подписки:\r\n      </Typography>\r\n      <List dense className={classes.root}>\r\n        {mySubs}\r\n        {!isLoading && !user_subs.length && <p className=\"center\">Вы нинакого не подписаны :(</p>}\r\n      </List>\r\n  </>\r\n);\r\n}\r\n\r\nexport default SubsList;","import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport { Typography } from '@material-ui/core';\r\nimport { getRecomends } from '../store/subs/operations';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from './Loader'\r\nimport Sub from './Sub';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '1px solid #000',\r\n    marginBottom: '5px',\r\n    maxHeight: '140px',\r\n    overflowX: 'auto'\r\n  },\r\n}));\r\n\r\nfunction RecSubsList({togglePoint}) {\r\n  const classes = useStyles();\r\n  \r\n  const dispatch = useDispatch();\r\n\r\n  \r\n  const recomends_subs = useSelector(st => st.subs.recomends_subs)\r\n  const isLoading = useSelector(st => st.subs.isLoadingRec)\r\n  const isLogin = useSelector(st => st.user.isLogin)\r\n\r\n  \r\n  useEffect(() => {\r\n    if (!recomends_subs.length && isLoading) {\r\n      dispatch(getRecomends())\r\n    }\r\n  }, [dispatch, recomends_subs, isLoading, isLogin]);\r\n\r\n\r\n\r\n\r\n  const subsRecomend = recomends_subs.map((value) => (\r\n    <Sub key={value._id} togglePoint={togglePoint} {...value} />\r\n  ))\r\n  \r\n\r\n\r\n  if (!recomends_subs.length && isLoading) {\r\n    return <Loader />\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n    {!isLoading && !!recomends_subs.length &&\r\n      <>\r\n        <Typography variant=\"h6\">\r\n          Рекомендуемые:\r\n        </Typography>\r\n        <List dense className={classes.root}>\r\n          {subsRecomend}\r\n        </List> \r\n      </>\r\n    }\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default RecSubsList;","import { useEffect, useState } from 'react';\r\n\r\n\r\nconst useBreakpoint = (queries) => {\r\n    const [queryMatch, setQueryMatch] = useState(null);\r\n  \r\n    useEffect(() => {\r\n      const mediaQueryLists = {};\r\n      const keys = Object.keys(queries);\r\n      \r\n      // To check whether event listener is attached or not\r\n      let isAttached = false;\r\n  \r\n      const handleQueryListener = () => {\r\n        const updatedMatches = keys.reduce((acc, media) => {\r\n          acc[media] = !!(mediaQueryLists[media] && mediaQueryLists[media].matches);\r\n          return acc;\r\n        }, {})\r\n        //Setting state to the updated matches \r\n        // when document either starts or stops matching a query\r\n        setQueryMatch(updatedMatches)\r\n      }\r\n  \r\n      if (window && window.matchMedia) {\r\n        const matches = {};\r\n        keys.forEach(media => {\r\n          if (typeof queries[media] === 'string') {\r\n            mediaQueryLists[media] = window.matchMedia(queries[media]);\r\n            matches[media] = mediaQueryLists[media].matches\r\n          } else {\r\n            matches[media] = false\r\n          }\r\n        });\r\n        //Setting state to initial matching queries\r\n        setQueryMatch(matches);\r\n        isAttached = true;\r\n        keys.forEach(media => {\r\n          if(typeof queries[media] === 'string') {\r\n            mediaQueryLists[media].addListener(handleQueryListener);\r\n          }\r\n        });\r\n      }\r\n  \r\n      return () => {\r\n      //If event listener is attached then remove it when deps change\r\n        if(isAttached) {\r\n          keys.forEach(media => {\r\n            if(typeof queries[media] === 'string') {\r\n              mediaQueryLists[media].removeListener(handleQueryListener);\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }, [queries]);\r\n  \r\n    return queryMatch;\r\n}\r\n  \r\n  export default useBreakpoint;","import Post from '../components/Post';\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport { loadPosts } from '../store/posts/operations';\r\nimport Loader from '../components/Loader';\r\nimport SubsList from '../components/SubsList';\r\nimport RecSubsList from '../components/RecSubsList';\r\nimport Comments from '../components/Comments';\r\nimport useBreakpoint from '../theme/useBreakpoint';\r\n\r\n\r\n\r\n\r\nfunction HomePosts({queries}) {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const posts = useSelector(st => st.posts.posts)\r\n    const hasMore = useSelector(st => st.posts.hasMore)\r\n    const isLogin = useSelector(st => st.user.isLogin)\r\n\r\n\r\n    useEffect(() => {\r\n        if (!posts.length) {\r\n            dispatch(loadPosts())\r\n        }\r\n    }, [posts, dispatch]);\r\n\r\n\r\n    const allPosts = posts.map((e, i) => {\r\n        return (\r\n            <Post key={e.id}  {...posts[i]}>\r\n                <Comments lastComments={e.lastComment} postId={e.id}></Comments>\r\n            </Post>\r\n        )\r\n    })\r\n\r\n\r\n    const matchPoints = useBreakpoint(queries);\r\n\r\n    return (\r\n        <section className=\"home-container\">\r\n            <div className={`posts${!isLogin ? '-max' : ''}`}>\r\n                <InfiniteScroll\r\n                    dataLength={posts.length}\r\n                    next={() => dispatch(loadPosts())}\r\n                    hasMore={hasMore}\r\n                    endMessage={<p className=\"center\">Постов нету :(</p>}\r\n                    loader={<Loader/>}\r\n                >\r\n                    {allPosts}\r\n                </InfiniteScroll>\r\n            </div>\r\n            {isLogin &&\r\n                <div className=\"subs\">\r\n                    <SubsList togglePoint={!!matchPoints && matchPoints.toggle} />\r\n                    <RecSubsList togglePoint={!!matchPoints && matchPoints.toggle} />\r\n                </div>\r\n            }\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default HomePosts;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: 'auto'\r\n  },\r\n}));\r\n\r\nfunction GridListPhoto(props) {\r\n    const classes = useStyles();\r\n\r\n\r\n    return (\r\n        <GridListTile {...props} style={{...props.style, height: 'auto', padding: '5px'}} className={classes.root}>\r\n        </GridListTile>\r\n    );\r\n}\r\n\r\n\r\nexport default GridListPhoto;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubble';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\n\r\nimport axios from 'axios';\r\nimport alertify from 'alertifyjs';\r\nimport Loader from './Loader';\r\nimport GridListPhoto from './GridListPhoto';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activatePostDetails } from '../store/modals/operations';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  img: {\r\n    width: '100%',\r\n    maxHeight: '280px',\r\n    height: '100%'\r\n  },\r\n  list: {\r\n    width: '100%'\r\n  },\r\n  details: {\r\n    position: 'absolute',\r\n    background: '#1a191991',\r\n    zIndex: 1,\r\n    width: '100%',\r\n    height: '100%',\r\n    top: 0,\r\n    left: 0,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n    color: '#fff',\r\n    fontSize: '20px',\r\n    transition: '.3s',\r\n    opacity: 0,\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n        opacity: 1,\r\n     },\r\n  }\r\n}));\r\n\r\nfunction BodyGridUser({userId}) {\r\n  const classes = useStyles();\r\n\r\n    const [userPosts, setUserPosts] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n\r\n    const getUserPosts = (userId) => {\r\n        axios.post('/users/posts', {userId}).then((res) => {\r\n            if (!!res.data) {\r\n                if(!!res.data['error']){\r\n                    alertify.error(res.data['error']);\r\n                }\r\n                if(!!res.data['posts']){\r\n                    setUserPosts(res.data['posts']);\r\n                    setIsLoading(false)\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const getPost = (postId) => {\r\n        dispatch(activatePostDetails(postId));\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUserPosts(userId)\r\n    }, [userId]);\r\n\r\n    if (isLoading) {\r\n        return <Loader />\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n        {!!userPosts.length && \r\n        <GridList cols={3} className={classes.list}>\r\n            {userPosts.map((post) => (\r\n            <GridListPhoto key={post._id} cols={1} onClick={() => getPost(post._id)}>\r\n                <div className={classes.details}>\r\n                    <span>{post.likes}<FavoriteIcon /></span>\r\n                    <span>{post.comments}<ChatBubbleIcon />   </span>              \r\n                </div>\r\n                <img className={classes.img} src={post.image} alt={'Post №' + post._id} />\r\n            </GridListPhoto>\r\n            ))}\r\n        </GridList>\r\n        }\r\n        {!userPosts.length && 'У пользователя ещё нет постов!'}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default BodyGridUser;","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport axios from 'axios';\r\nimport alertify from 'alertifyjs';\r\nimport Loader from './Loader';\r\nimport { Avatar, Button, Typography } from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux';\r\nimport { subscribeAction } from '../store/subs/operations';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    header: {\r\n      width: '100%',\r\n      backgroundColor: theme.palette.background.paper,\r\n      marginBottom: '5px',\r\n      display: 'flex'\r\n    },\r\n    avatar: {\r\n        width: '100px',\r\n        height: '100px',\r\n        fontSize: '40px'\r\n    },\r\n    second: {\r\n        marginLeft: '30px'\r\n    }\r\n}));\r\n\r\n\r\nfunction HeaderUser({userId}) {\r\n\r\n\r\n    const [userInfo, setUserInfo] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isSub, setIsSub] = useState(false);\r\n\r\n    const getUserInfo = (userId) => {\r\n        axios.post('/subs/info', {userId}).then((res) => {\r\n            if (!!res.data) {\r\n                if(!!res.data['error']){\r\n                    alertify.error(res.data['error']);\r\n                }\r\n                if(!!res.data['info']){\r\n                    setUserInfo(res.data['info']);\r\n                    setIsSub(res.data['info']['isSub']);\r\n                    setIsLoading(false)\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUserInfo(userId)\r\n    }, [userId]);\r\n\r\n    const {nickname, image} = userInfo\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const subAction = () => {\r\n        dispatch(subscribeAction(userId, isSub, setIsSub))    \r\n    }\r\n\r\n\r\n    if (isLoading) {\r\n        return <Loader />\r\n    }\r\n\r\n\r\n\r\n    let textSub;\r\n    if (!isSub) {\r\n        textSub = 'Подписаться'\r\n    }else{\r\n        textSub = 'Отписаться'\r\n    }\r\n\r\n  \r\n\r\n\r\n    return (\r\n        <section className={classes.header}> \r\n            <Avatar\r\n                aria-label=\"recipe\" \r\n                src={image}\r\n                className={`avatar ${classes.avatar}`}\r\n            >\r\n              {nickname[0]}\r\n            </Avatar>\r\n            <div className={classes.second}>\r\n                <Typography variant=\"h3\">\r\n                    {nickname}\r\n                </Typography>\r\n                <Button \r\n                    variant=\"contained\" \r\n                    color=\"secondary\"\r\n                    onClick={subAction}\r\n                >\r\n                    {textSub}\r\n                </Button>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default HeaderUser;","import React from 'react';\r\nimport BodyGridUser from '../components/BodyGridUser';\r\nimport HeaderUser from '../components/HeaderUser';\r\n\r\n\r\n\r\nfunction UserPage({match}) {\r\n\r\n    const userId = match.params.userId;\r\n\r\n\r\n\r\n    return (\r\n        <section className=\"user-container\">\r\n            <HeaderUser userId={userId} />\r\n            <BodyGridUser userId={userId} />\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default UserPage;","import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport HomePosts from './pages/HomePosts';\r\nimport UserPage from './pages/UserPage';\r\n\r\nconst queries = {\r\n    toggle: '(max-width: 930px)',\r\n}\r\n\r\nconst AppRoutes = () => {\r\n\r\n\r\n  return (\r\n    <Switch>\r\n        <Route exact path='/'  >\r\n            <HomePosts queries={queries} />\r\n        </Route>\r\n        <Route exact path='/user/:userId' component={UserPage} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default AppRoutes","import './index.scss';\nimport 'alertifyjs/build/css/alertify.css';\nimport { Container } from '@material-ui/core';\nimport Header from './components/Header';\nimport Modals from './modals';\nimport AppRoutes from './AppRoutes';\n\n\n\n\nconst App = () => {\n  return (\n    <Container maxWidth=\"md\">\n      <Header></Header>\n      <AppRoutes></AppRoutes>\n      <Modals />\n    </Container>\n    \n  );\n}\n\nexport default App;\n","const initialState = {\r\n    posts: [],\r\n    page: 1,\r\n    hasMore: true,\r\n    activePostDetails: null\r\n}\r\n\r\nconst posts = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LOAD_POSTS':\r\n            return {...state, posts: action.payload, page: state.page + 1}\r\n        case 'UPLOAD_IMAGE':\r\n            return {...state, selectedFile: null}\r\n        case 'SAVE_HAS_MORE':\r\n            return {...state, hasMore: action.payload}\r\n        case 'SAVE_ALL_COMMENTS': \r\n            const refreshCommentsPost = state.posts.map(post => {\r\n                const newPost = {...post}\r\n\r\n                if (newPost.id === action.payload.postId) {\r\n                    newPost.lastComment = action.payload.comments\r\n                }\r\n                return newPost;\r\n            })\r\n            return {...state, posts: refreshCommentsPost}\r\n        case 'SAVE_LAST_COMMENT':\r\n            const refreshPost = state.posts.map(post => {\r\n                const newPost = {...post}\r\n\r\n                if (newPost.id === action.payload.postId) {\r\n                    newPost.lastComment.push(action.payload.newComment)\r\n                }\r\n                return newPost;\r\n            })\r\n            return {...state, posts: refreshPost}\r\n        case 'DELETE_POSTS':\r\n            return {hasMore: true, posts: [], page: 1, activePostDetails: null}\r\n        case 'ACTIVATE_POST':\r\n            return {...state, activePostDetails: action.payload}    \r\n        case 'DEL_ACTIVATE_POST': \r\n            return {...state, activePostDetails: null} \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default posts;\r\n","const initialState = {\r\n    user_info: [],\r\n    isLogin: false,\r\n    isAuth: localStorage.getItem('isAuth') || false\r\n}\r\n\r\nconst user = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SEND_LOGIN':\r\n            const { ...user_info } = action.payload;\r\n            localStorage.setItem('isAuth', true);\r\n            return {\r\n                user_info,\r\n                isLogin: true\r\n            }\r\n        case 'SEND_LOGOUT':\r\n            localStorage.removeItem('isAuth');\r\n            return {session_id: null, user_info: [], isLogin: false}\r\n        case 'SET_AVATAR':\r\n            return {...state, user_info: {...state.user_info, image: action.payload}}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default user;\r\n","const initialState = {\r\n    active: false,\r\n    login: false,\r\n    register: false,\r\n    uploadPost: false,\r\n    uploadUserAvatar: false,\r\n    postDetails: false\r\n}\r\n\r\nconst modals = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'CLOSE_ALL':\r\n            return {...action.payload}\r\n        case 'ACTIVE_REGISTER':\r\n            return {...state, register: true, active: true}\r\n        case 'ACTIVE_LOGIN':\r\n            return {...state, login: true, active: true}\r\n        case 'ACTIVE_UPLOAD_POST':\r\n            return {...state, uploadPost: true, active: true}\r\n        case 'ACTIVE_UPLOAD_USER_AVATAR':\r\n            return {...state, uploadUserAvatar: true, active: true}\r\n        case 'ACTIVE_POST_DETAILS':\r\n            return {...state, postDetails: true, active: true}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default modals;\r\n","const initialState = {\r\n    recomends_subs: [],\r\n    user_subs: [],\r\n    isLoadingRec: true,\r\n    isLoadingSub: true,\r\n}\r\n\r\nconst subs = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'GET_RECOMEND_SUBS':\r\n            return {...state, recomends_subs: action.payload, isLoadingRec: false}\r\n        case 'SAVE_SUBS':\r\n            return {...state, user_subs: action.payload, isLoadingSub: false}\r\n        case 'CLEAR_SUBS':\r\n            return {...initialState}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default subs;\r\n","import { combineReducers } from 'redux'\r\nimport posts from './posts/reducer'\r\nimport user from './user/reducer'\r\nimport modals from './modals/reducer'\r\nimport subs from './subs/reducer'\r\n\r\nexport default combineReducers({\r\n    posts,\r\n    user,\r\n    modals,\r\n    subs\r\n})","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport reducer from './reducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst devtools = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__() : null\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  compose(applyMiddleware(thunk), devtools)\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './store/store';\n\nReactDOM.render(\n\n    <Provider store={store} >\n      <BrowserRouter >\n        <App />\n      </BrowserRouter>\n    </Provider>\n ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}